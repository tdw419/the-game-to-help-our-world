
<!DOCTYPE html>
<html>
<head>
    <title>PXSeed Reflex Dashboard - Full</title>
    <style>
        body { background: #111; color: #eee; font-family: monospace; padding: 2em; }
        h1 { color: #67f542; }
        section { margin-top: 2em; }
        .log, .ai, .live, .canvas { background: #222; padding: 1em; border-radius: 8px; }
        button { margin: 0.2em; padding: 0.5em 1em; background: #444; color: #fff; border: none; border-radius: 4px; }
        canvas { border: 1px solid #444; margin-top: 1em; }
    </style>
</head>
<body>
    <h1>üå± PXSeed Reflex Dashboard</h1>

    <section class="live">
        <h2>üì° Live System Data</h2>
        <p>Disk Usage: <span id="diskUsage">Loading...</span></p>
        <p>Memory Usage: <span id="memUsage">Loading...</span></p>
        <p>Active Reflex: <span id="reflexState">Waiting...</span></p>
    </section>

    <section class="canvas">
        <h2>üñºÔ∏è Visual Canvas</h2>
        <canvas id="pxcanvas" width="256" height="256"></canvas>
        <p>Hovered Pixel: <span id="pxInfo">None</span></p>
    </section>

    <section class="log">
        <h2>üìú Reflex Log</h2>
        <pre id="logOutput">Awaiting trigger events...</pre>
        <button onclick="simulateSpike()">Simulate Disk Spike</button>
        <button onclick="triggerRestore()">Trigger Restore</button>
    </section>

    <section class="ai">
        <h2>ü§ñ AI Assistant</h2>
        <textarea id="aiInput" rows="3" cols="50" placeholder="Ask Junior or Grok..."></textarea><br>
        <button onclick="talkToAI()">Ask</button>
        <pre id="aiResponse">AI will respond here...</pre>
    </section>

    <script>
    // Load image to canvas
    const img = new Image();
    img.src = "pxseed_self_healing_active.png";
    img.onload = () => {
        const canvas = document.getElementById('pxcanvas');
        const ctx = canvas.getContext('2d');
        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
    };

    // Pixel hover logic
    const canvas = document.getElementById('pxcanvas');
    const ctx = canvas.getContext('2d');
    canvas.addEventListener('mousemove', e => {
        const x = Math.floor(e.offsetX);
        const y = Math.floor(e.offsetY);
        const data = ctx.getImageData(x, y, 1, 1).data;
        document.getElementById('pxInfo').textContent = `(${x},${y}) RGBA = ${data[0]},${data[1]},${data[2]},${data[3]}`;
    });

    // Simulate spike
    function simulateSpike() {
        document.getElementById('diskUsage').textContent = "97% (Simulated)";
        document.getElementById('reflexState').textContent = "TRIGGERED";
        document.getElementById('logOutput').textContent += "\n‚ö†Ô∏è High Disk Usage detected ‚Äì Reflex triggered!";
    }

    function triggerRestore() {
        document.getElementById('logOutput').textContent += "\nüîÅ Canvas restored from snapshot.";
        document.getElementById('reflexState').textContent = "RESTORED";
    }

    function talkToAI() {
        const q = document.getElementById('aiInput').value.toLowerCase();
        let response = "ü§ñ Junior: I am scanning the substrate...";
        if (q.includes("spike")) response = "üß† Grok: Disk spike was due to svchost.exe ‚Äì logged and contained.";
        if (q.includes("heal")) response = "ü©π Junior: Self-healing routine is complete.";
        document.getElementById('aiResponse').textContent = response;
    }

    // Simulated memory values
    document.getElementById("diskUsage").textContent = "38%";
    document.getElementById("memUsage").textContent = "42%";
    </script>
</body>
</html>
